# Dockerfile for building a cross developing environment.
#
# (c) 2017-2018 by Kaspter Ju <camus@rtavs.com>
#
# To build the environment invoke
#
# $ docker build -t alpine:amd64 -f amd64/rtavs.alpine .
#
# This creates a docker image called "<distro>:<arch>". Note that it will
# take a while if you are building this image the first time.
#
# Note that Docker requires a relatively recent Linux kernel.
# 3.8 is the current minimum.
#

FROM alpine:latest as buildbase
MAINTAINER Kaspter Ju "camus@rtavs.com"


ENV SRT_VERSION=1.4.3
ENV SLS_VERSION=1.4.9
ENV GST_VERSION=1.18.4


# local mirror

RUN echo "http://mirrors.aliyun.com/alpine/latest-stable/main/" > /etc/apk/repositories
RUN echo "http://mirrors.aliyun.com/alpine/latest-stable/community/" >> /etc/apk/repositories

RUN apk update && apk upgrade

RUN apk add --no-cache \
    autoconf \
    automake \
    bison \
    build-base \
    cmake \
    flex \
    gettext-dev \
    git \
    glib-dev \
    gobject-introspection-dev \
    linux-headers \
    meson \
    ninja \
    x264-dev \
    orc-compiler \
    orc-dev \
    tcl \
    tzdata \
    openssl-dev \
    zlib-dev

ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


ENV PREFIX=/usr/local
RUN mkdir -p ${PREFIX}


FROM buildbase as srtbase

WORKDIR /tmp

# libsrt
RUN git clone https://github.com/Haivision/srt.git
RUN git clone https://github.com/Edward-Wu/srt-live-server.git

WORKDIR /tmp/srt
RUN ./configure && make && make install

# sls
WORKDIR /tmp/srt-live-server
RUN make


WORKDIR /tmp

FROM srtbase as gstbase
ARG GST_MODULE=gstreamer

# GStreamer
RUN \
	git clone -c advice.detachedHead=false --quiet --depth=1 --branch=${GST_VERSION} https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
	&& meson --prefix=${PREFIX} \
              -Dbuildtype=release \
              -Dgst_debug=false \
              -Dexamples=disabled \
              -Dtests=disabled \
              -Dbenchmarks=disabled \
              -Dgtk_doc=disabled \
              -Ddoc=disabled \
              -Dpackage-origin=https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
              ${GST_MODULE} ${GST_MODULE}_build \
	&& meson compile -C ${GST_MODULE}_build \
	&& meson install -C ${GST_MODULE}_build

#


FROM gstbase as libgstbase

ARG GST_MODULE=gst-plugins-base

# GStreamer-Plugins-base
RUN apk add \
#			alsa-lib-dev \
#			cdparanoia-dev \
			expat-dev \
#			gtk+3.0-dev \
			libice-dev \
			libogg-dev \
			libsm-dev \
			libtheora-dev \
			libvorbis-dev \
#			libxv-dev \
#			mesa-dev \
			opus-dev

RUN \
    git clone -c advice.detachedHead=false --quiet --depth=1 --branch=${GST_VERSION} https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
	&& meson --prefix=${PREFIX} \
              -Dbuildtype=release \
              -Dexamples=disabled \
              -Dtests=disabled \
              -Ddoc=disabled \
              -Dpackage-origin=https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
              ${GST_MODULE} ${GST_MODULE}_build \
	&& meson compile -C ${GST_MODULE}_build \
	&& meson install -C ${GST_MODULE}_build



FROM libgstbase as libgstgood

ARG GST_MODULE=gst-plugins-good

RUN apk add \
#			cairo-dev \
			flac-dev \
#			gdk-pixbuf-dev \
#			gtk+3.0-dev \
#			jack-dev\
			lame-dev\
#			libavc1394-dev\
			libcaca-dev\
#			libdv-dev\
			libgudev-dev\
			libice-dev\
#			libiec61883-dev\
			libjpeg-turbo-dev\
			libogg-dev\
			libpng-dev\
			libshout-dev\
			libsm-dev\
			libsoup-dev\
			libvpx-dev\
			libxdamage-dev \
			libxext-dev \
			libxv-dev \
			mpg123-dev\
			taglib-dev \
			v4l-utils-dev \
			wavpack-dev \
#			pulseaudio-dev \
	&& git clone -c advice.detachedHead=false --quiet --depth=1 --branch=${GST_VERSION} https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
	&& meson --prefix=${PREFIX} \
              -Dbuildtype=release \
              -Dexamples=disabled \
              -Dtests=disabled \
              -Ddoc=disabled \
              -Dpackage-origin=https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
              ${GST_MODULE} ${GST_MODULE}_build \
	&& meson compile -C ${GST_MODULE}_build \
	&& meson install -C ${GST_MODULE}_build


FROM libgstgood as libgstbad

ARG GST_MODULE=gst-plugins-bad

RUN apk add \
			alsa-lib-dev  \
			bzip2-dev \
			curl-dev \
			faac-dev \
			faad2-dev \
			flite-dev \
			glu-dev \
			gsm-dev \
			libass-dev \
			libexif-dev \
			libmodplug-dev \
#			libsrt-dev \
			libsrtp-dev \
			libvdpau-dev \
			libwebp-dev \
			libnice-dev \
#			libx11-dev \
#			mesa-dev \
			neon-dev \
			opus-dev \
			spandsp-dev \
			tiff-dev \
			x265-dev \
#			vulkan-loader-dev \
#			vulkan-headers \
#			wayland-dev \
#			wayland-protocols \
			libusrsctp-dev \
			pango-dev \
			fdk-aac-dev \
			fluidsynth-dev \
			libde265-dev \
			openal-soft-dev \
			openexr-dev \
			openjpeg-dev \
			sbc-dev \
			libsndfile-dev \
#			libxkbcommon-dev \
			zbar-dev \
#			gtk+3.0-dev \
			rtmpdump-dev \
	&& git clone -c advice.detachedHead=false --quiet --depth=1 --branch=${GST_VERSION} https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
	&& meson --prefix=${PREFIX} \
              -Dbuildtype=release \
              -Dexamples=disabled \
              -Dtests=disabled \
              -Ddoc=disabled \
              -Dsctp=enabled \
              -Dsrt=enabled \
              -Dpackage-origin=https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
              ${GST_MODULE} ${GST_MODULE}_build \
	&& meson compile -C ${GST_MODULE}_build \
	&& meson install -C ${GST_MODULE}_build


FROM libgstbad as libgstugly

ARG GST_MODULE=gst-plugins-ugly

RUN apk add \
			a52dec-dev \
			libmpeg2-dev \
			x264-dev \
	&& git clone -c advice.detachedHead=false --quiet --depth=1 --branch=${GST_VERSION} https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
	&& meson --prefix=${PREFIX} \
              -Dbuildtype=release \
              -Dexamples=disabled \
              -Dtests=disabled \
              -Ddoc=disabled \
              -Dpackage-origin=https://gitlab.freedesktop.org/gstreamer/${GST_MODULE}.git \
              ${GST_MODULE} ${GST_MODULE}_build \
	&& meson compile -C ${GST_MODULE}_build \
	&& meson install -C ${GST_MODULE}_build



#RUN rm -rf /tmp/gst*


ENV GST_PLUGIN_PATH=/usr/local/lib/gstreamer-1.0/

ENV LD_LIBRARY_PATH /lib:/usr/lib:/usr/local/lib:/usr/local/lib64


EXPOSE 22

EXPOSE 5391/udp

